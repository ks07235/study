/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.107
 * Generated at: 2025-08-19 02:58:08 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class header_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!-- Bootstrap CSS -->\r\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("/* 헤더 컨테이너 */\r\n");
      out.write("body {\r\n");
      out.write("    background-color: black;\r\n");
      out.write("}\r\n");
      out.write(".header-container {\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    background-color: rgba(0, 0, 0, 0.9);\r\n");
      out.write("    font-family: 'Noto Sans KR', sans-serif;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 실제 검은색 배경 영역 */\r\n");
      out.write(".header-inner {\r\n");
      out.write("    max-width: 1200px;\r\n");
      out.write("    margin: 0 auto;\r\n");
      out.write("    background-color: #000;\r\n");
      out.write("    color: #eee;\r\n");
      out.write("    padding: 20px 0 60px;\r\n");
      out.write("    position: relative;\r\n");
      out.write("    text-align: center;\r\n");
      out.write("    box-sizing: border-box;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".brand .en {\r\n");
      out.write("    margin: 0;\r\n");
      out.write("    color: #FF7961;\r\n");
      out.write("    font-size: 1.6rem;\r\n");
      out.write("    font-weight: 700;\r\n");
      out.write("    letter-spacing: 0.1em;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".brand .ko {\r\n");
      out.write("    margin: 0;\r\n");
      out.write("    font-size: 1.3rem;\r\n");
      out.write("    font-weight: 700;\r\n");
      out.write("    letter-spacing: 0.1em;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 언더라인 */\r\n");
      out.write(".underline {\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    border-bottom: 2px solid #666;\r\n");
      out.write("    margin: 20px auto 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 로그인/회원정보 영역 */\r\n");
      out.write(".user-section {\r\n");
      out.write("    position: absolute;\r\n");
      out.write("    right: 10px;\r\n");
      out.write("    top: 20px;\r\n");
      out.write("    font-size: 0.8rem;\r\n");
      out.write("    font-weight: 700;\r\n");
      out.write("    display: flex;\r\n");
      out.write("    gap: 10px;\r\n");
      out.write("    align-items: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".user-section button {\r\n");
      out.write("    background: transparent;\r\n");
      out.write("    border: 1px solid #666;\r\n");
      out.write("    color: #eee;\r\n");
      out.write("    padding: 5px 12px;\r\n");
      out.write("    border-radius: 5px;\r\n");
      out.write("    cursor: pointer;\r\n");
      out.write("    transition: 0.3s;\r\n");
      out.write("    margin-top: 15px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".user-section button:hover {\r\n");
      out.write("    background-color: #333;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 사용자 이름 */\r\n");
      out.write(".user-name {\r\n");
      out.write("    color: orange;\r\n");
      out.write("    font-weight: bold;\r\n");
      out.write("    margin-right: 10px;\r\n");
      out.write("    margin-top: 14px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 로고 */\r\n");
      out.write(".logo button {\r\n");
      out.write("    position: absolute;\r\n");
      out.write("    left: 6px;\r\n");
      out.write("    top: 16px;\r\n");
      out.write("    background-color: black;\r\n");
      out.write("    border: none;\r\n");
      out.write("    margin-top: 2px;\r\n");
      out.write("}\r\n");
      out.write(".logo img {\r\n");
      out.write("    width: 70px;\r\n");
      out.write("    height: 70px;\r\n");
      out.write("    border: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 언더라인 아래 메뉴 */\r\n");
      out.write(".ticketing_menu {\r\n");
      out.write("    display: flex;\r\n");
      out.write("    justify-content: center;\r\n");
      out.write("    gap: 18px;\r\n");
      out.write("    margin-top: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".ticketing_menu button {\r\n");
      out.write("    position: relative;\r\n");
      out.write("    background: transparent;\r\n");
      out.write("    border: none;\r\n");
      out.write("    color: #eee;\r\n");
      out.write("    padding: 8px 20px;\r\n");
      out.write("    border-radius: 5px;\r\n");
      out.write("    cursor: pointer;\r\n");
      out.write("    font-weight: 700;\r\n");
      out.write("    transition: color 0.3s;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 슬라이딩 밑줄 */\r\n");
      out.write(".ticketing_menu button::after {\r\n");
      out.write("    content: '';\r\n");
      out.write("    position: absolute;\r\n");
      out.write("    left: 50%;\r\n");
      out.write("    bottom: 0;\r\n");
      out.write("    width: 0;\r\n");
      out.write("    height: 3px;\r\n");
      out.write("    background-color: Orange;\r\n");
      out.write("    border-radius: 2px;\r\n");
      out.write("    transition: all 0.3s ease;\r\n");
      out.write("    transform: translateX(-50%);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 호버 시 밑줄 확장 및 글자 색상 변경 */\r\n");
      out.write(".ticketing_menu button:hover {\r\n");
      out.write("    \r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".ticketing_menu button:hover::after {\r\n");
      out.write("    width: 100%;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<div class=\"header-container\">\r\n");
      out.write("    <div class=\"header-inner\">\r\n");
      out.write("        <!-- 로고 -->\r\n");
      out.write("        <div class=\"logo\">\r\n");
      out.write("            <form action=\"home.do\">\r\n");
      out.write("                <button type=\"submit\"><img src=\"asset/images/lxcinema.png\"></button>\r\n");
      out.write("            </form>\r\n");
      out.write("        </div>\r\n");
      out.write("        \r\n");
      out.write("        <!-- 사용자 섹션 -->\r\n");
      out.write("        <div class=\"user-section\">\r\n");
      out.write("            ");
 
            userList.UserListVO loginUser = (userList.UserListVO)session.getAttribute("loginUser");
            if (loginUser != null) { 
            
      out.write("\r\n");
      out.write("                <span class=\"user-name\">");
      out.print(loginUser.getUserName());
      out.write("님</span>\r\n");
      out.write("                <form action=\"myPage.do\" style=\"display: inline;\">\r\n");
      out.write("                    <button type=\"submit\">마이페이지</button>\r\n");
      out.write("                </form>\r\n");
      out.write("                <form action=\"logout.do\" style=\"display: inline;\">\r\n");
      out.write("                    <button type=\"submit\">로그아웃</button>\r\n");
      out.write("                </form>\r\n");
      out.write("            ");
 
            } else { 
            
      out.write("\r\n");
      out.write("                <form action=\"login.jsp\" method=\"post\" style=\"display: inline;\">\r\n");
      out.write("                    <button type=\"submit\">로그인</button>\r\n");
      out.write("                </form>\r\n");
      out.write("                <form action=\"register.jsp\" method=\"post\" style=\"display: inline;\">\r\n");
      out.write("                    <button type=\"submit\">회원가입</button>\r\n");
      out.write("                </form>\r\n");
      out.write("            ");
 } 
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <!-- 사이트명 -->\r\n");
      out.write("        <h1 class=\"brand\">\r\n");
      out.write("            <a href=\"home.do\" style=\"color: inherit; text-decoration: none;\">\r\n");
      out.write("                <div class=\"en\">LX-CINEMA</div>\r\n");
      out.write("                <div class=\"ko\">공간 시네마</div>\r\n");
      out.write("            </a>\r\n");
      out.write("        </h1>\r\n");
      out.write("\r\n");
      out.write("        <!-- 언더라인 -->\r\n");
      out.write("        <div class=\"underline\"></div>\r\n");
      out.write("\r\n");
      out.write("        <!-- 메뉴 -->\r\n");
      out.write("        <div class=\"ticketing_menu\">\r\n");
      out.write("            <form action=\"MovieListServlet\" method=\"get\" style=\"display: inline;\">\r\n");
      out.write("                <button type=\"submit\">예매</button>\r\n");
      out.write("            </form>\r\n");
      out.write("            <form action=\"MovieGalleryServlet\" method=\"get\" style=\"display: inline;\">\r\n");
      out.write("                <button type=\"submit\">영화</button>\r\n");
      out.write("            </form>\r\n");
      out.write("            <form action=\"event.do\" method=\"get\" style=\"display: inline;\">\r\n");
      out.write("                <button type=\"submit\">이벤트</button>\r\n");
      out.write("            </form>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
