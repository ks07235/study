/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.107
 * Generated at: 2025-08-19 02:58:07 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class home_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\" />\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n");
      out.write("<title>영화관 홈페이지</title>\r\n");
      out.write("\r\n");
      out.write("<!-- Bootstrap CSS -->\r\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("<!-- Plyr CSS -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://cdn.plyr.io/3.7.8/plyr.css\" />\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("body {\r\n");
      out.write("	margin: 0;\r\n");
      out.write("	background-color: #000;\r\n");
      out.write("	color: #eee;\r\n");
      out.write("	font-family: 'Noto Sans KR', sans-serif;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".carousel-item {\r\n");
      out.write("	position: relative;\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	padding-top: 41%;\r\n");
      out.write("	overflow: hidden;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".carousel-item img {\r\n");
      out.write("	position: absolute;\r\n");
      out.write("	top: 0;\r\n");
      out.write("	left: 50%;\r\n");
      out.write("	width: auto;\r\n");
      out.write("	height: 100%;\r\n");
      out.write("	transform: translateX(-70%);\r\n");
      out.write("	object-fit: cover;\r\n");
      out.write("	object-position: top center;\r\n");
      out.write("	cursor: pointer;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".carousel-caption {\r\n");
      out.write("	position: absolute;\r\n");
      out.write("	top: 0px;\r\n");
      out.write("	transform: translateX(40%);\r\n");
      out.write("	padding: 10px 20px;\r\n");
      out.write("	border-radius: 5px;\r\n");
      out.write("	z-index: 1;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".carousel-caption p, h3 {\r\n");
      out.write("	text-align: left;\r\n");
      out.write("	transform: translateX(20%);\r\n");
      out.write("	padding: 10px 30px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#playerContainer {\r\n");
      out.write("	display: none;\r\n");
      out.write("	position: fixed;\r\n");
      out.write("	top: 0;\r\n");
      out.write("	left: 0;\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	height: 100%;\r\n");
      out.write("	background: rgba(0, 0, 0, 0.85);\r\n");
      out.write("	justify-content: center;\r\n");
      out.write("	align-items: center;\r\n");
      out.write("	flex-direction: column;\r\n");
      out.write("	z-index: 9999;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#playerContainer iframe {\r\n");
      out.write("	width: 80%;\r\n");
      out.write("	height: 80%;\r\n");
      out.write("	transform: translateX(20%);\r\n");
      out.write("	top: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#closeBtn {\r\n");
      out.write("	margin-top: 10px;\r\n");
      out.write("	padding: 5px 15px;\r\n");
      out.write("	font-size: 1.2rem;\r\n");
      out.write("	cursor: pointer;\r\n");
      out.write("	color: #fff;\r\n");
      out.write("	background: rgba(255, 255, 255, 0.1);\r\n");
      out.write("	border: none;\r\n");
      out.write("	border-radius: 5px;\r\n");
      out.write("	transform: translateY(60%);\r\n");
      out.write("	\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/header.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
 
String deleteMsg = (String) request.getAttribute("deleteMsg");
if (deleteMsg != null) {

      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("    alert('");
      out.print( deleteMsg );
      out.write("');\r\n");
      out.write("</script>\r\n");

}

      out.write("\r\n");
      out.write("<main>\r\n");
      out.write("	<div id=\"movieCarousel\" class=\"carousel slide\" data-bs-ride=\"carousel\" data-bs-interval=\"4000\">\r\n");
      out.write("\r\n");
      out.write("		<!-- 인디케이터 -->\r\n");
      out.write("		<div class=\"carousel-indicators\">\r\n");
      out.write("			<button type=\"button\" data-bs-target=\"#movieCarousel\" data-bs-slide-to=\"0\" class=\"active\"></button>\r\n");
      out.write("			<button type=\"button\" data-bs-target=\"#movieCarousel\" data-bs-slide-to=\"1\"></button>\r\n");
      out.write("			<button type=\"button\" data-bs-target=\"#movieCarousel\" data-bs-slide-to=\"2\"></button>\r\n");
      out.write("			<button type=\"button\" data-bs-target=\"#movieCarousel\" data-bs-slide-to=\"3\"></button>\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("		<!-- 슬라이드 -->\r\n");
      out.write("		<div class=\"carousel-inner\">\r\n");
      out.write("			<div class=\"carousel-item active\">\r\n");
      out.write("				<img src=\"asset/images/oldboy.png\" alt=\"올드보이\"\r\n");
      out.write("				     data-video=\"https://www.youtube.com/embed/hBNBpNcuQHI?autoplay=1\">\r\n");
      out.write("				<div class=\"carousel-caption\">\r\n");
      out.write("					<h3>올드보이</h3>\r\n");
      out.write("					<p>“누가, 왜 나를 가두었는가?”</p>\r\n");
      out.write("					<p>15년 동안 이유도 모른 채 감금당한 오대수는 풀려난 후,</p>\r\n");
      out.write("					<p>자신을 가둔 자를 찾아 복수와 진실의 퍼즐을 맞춰가기 시작한다.</p>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<div class=\"carousel-item\">\r\n");
      out.write("				<img src=\"asset/images/new.png\" alt=\"신세계\"\r\n");
      out.write("				       data-video=\"https://www.youtube.com/embed/I_-q5SJ6zPI?autoplay=1\">\r\n");
      out.write("				<div class=\"carousel-caption\">\r\n");
      out.write("					<h3>신세계</h3>\r\n");
      out.write("					<p>“너, 나랑 일 하나 같이하자”</p>\r\n");
      out.write("					<p>잠입 형사 이자성과 조직원 정청의 충성과 배신이 얽히며,</p>\r\n");
      out.write("					<p>숨겨진 권력과 음모가 서서히 드러난다.</p>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<div class=\"carousel-item\">\r\n");
      out.write("				<img src=\"asset/images/showman.png\" alt=\"위대한 쇼맨\"\r\n");
      out.write("				     data-video=\"https://www.youtube.com/embed/cnIOq6P8PUU?autoplay=1\">\r\n");
      out.write("				<div class=\"carousel-caption\">\r\n");
      out.write("					<h3>위대한 쇼맨</h3>\r\n");
      out.write("					<p>한 남자, 피니어스 배너햄은 세상의 편견과 맞서</p>\r\n");
      out.write("					<p>위대한 공연을 만들어 나간다.</p>\r\n");
      out.write("					<p>열정과 도전, 그리고 희망이 사람들을 사로잡는다.</p>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("			\r\n");
      out.write("			<div class=\"carousel-item\">\r\n");
      out.write("				<img src=\"asset/images/infinity.png\" alt=\"위대한 쇼맨\"\r\n");
      out.write("				     data-video=\"https://www.youtube.com/embed/zN8K_uE1LYg?autoplay=1\">\r\n");
      out.write("				<div class=\"carousel-caption\">\r\n");
      out.write("					<h3>귀멸의 칼날 무한성편</h3>\r\n");
      out.write("					<p>결전의 포문이 열린다⸺</p>\r\n");
      out.write("					<p>탄지로 일행이 떨어진 곳, 그곳은 혈귀의 본거지 《무한성》─</p>\r\n");
      out.write("					<p>“귀살대”와 “혈귀”의 최종 결전의 포문이 열린다.</p>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("		<!-- 캐러셀 컨트롤 -->\r\n");
      out.write("		<button class=\"carousel-control-prev\" type=\"button\" data-bs-target=\"#movieCarousel\" data-bs-slide=\"prev\">\r\n");
      out.write("			<span class=\"carousel-control-prev-icon\"></span>\r\n");
      out.write("		</button>\r\n");
      out.write("		<button class=\"carousel-control-next\" type=\"button\" data-bs-target=\"#movieCarousel\" data-bs-slide=\"next\">\r\n");
      out.write("			<span class=\"carousel-control-next-icon\"></span>\r\n");
      out.write("		</button>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("	<!-- 동영상 플레이어 -->\r\n");
      out.write("	<div id=\"playerContainer\">\r\n");
      out.write("		<iframe id=\"player\" src=\"\" frameborder=\"0\" allow=\"autoplay; encrypted-media\" allowfullscreen></iframe>\r\n");
      out.write("		<button id=\"closeBtn\">닫기</button>\r\n");
      out.write("	</div>\r\n");
      out.write("</main>\r\n");
      out.write("\r\n");
      out.write("<!-- JS -->\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.7.0.min.js\"></script>\r\n");
      out.write("<script src=\"https://cdn.plyr.io/3.7.8/plyr.polyfilled.js\"></script>\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("$(function() {\r\n");
      out.write("	let player;\r\n");
      out.write("\r\n");
      out.write("	$('.carousel-item img').click(function() {\r\n");
      out.write("		const url = $(this).data('video');\r\n");
      out.write("		$('#player').attr('src', url); // iframe src 변경\r\n");
      out.write("		$('#playerContainer').fadeIn();\r\n");
      out.write("	});\r\n");
      out.write("\r\n");
      out.write("	$('#closeBtn').click(function() {\r\n");
      out.write("		$('#playerContainer').fadeOut();\r\n");
      out.write("		$('#player').attr('src', ''); // iframe 비우기\r\n");
      out.write("	});\r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/bottom.jsp", out, false);
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
