/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.107
 * Generated at: 2025-08-19 07:05:22 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class movie_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1755572257798L));
    _jspx_dependants.put("jar:file:/C:/Study/LX/jsp-project/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/secTeamProject/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fchoose;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fotherwise;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fdefault_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fchoose = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fotherwise = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fdefault_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.release();
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fchoose.release();
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fotherwise.release();
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fdefault_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" /> \r\n");
      out.write("\r\n");
      out.write("<title>영화관 홈페이지</title>\r\n");
      out.write("\r\n");
      out.write("<!-- Bootstrap CSS -->\r\n");
      out.write("\r\n");
      out.write("<link\r\n");
      out.write("	href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\"\r\n");
      out.write("	rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write(":root{\r\n");
      out.write("  --page-max: 1200px;     /* 헤더의 기준 폭과 동일 */\r\n");
      out.write("  --page-pad-x: 20px;     /* 좌우 패딩 */\r\n");
      out.write("  --grid-gap: 45px;       /* 카드 간격 */\r\n");
      out.write("  --card-min: 200px;      /* 카드 최소폭 */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* --------------------------\r\n");
      out.write("\r\n");
      out.write("   전체 페이지 기본 스타일\r\n");
      out.write("\r\n");
      out.write("--------------------------- */\r\n");
      out.write("body {\r\n");
      out.write("	background-color: #000;\r\n");
      out.write("	color: #eee;\r\n");
      out.write("	font-family: 'Noto Sans KR', sans-serif;\r\n");
      out.write("	margin: 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".container {\r\n");
      out.write("    min-height: 100vh; /* 최소 화면 높이 */\r\n");
      out.write("    padding: 40px var(--page-pad-x) 80px; /* 아래 여유 공간 확보 */\r\n");
      out.write("	max-width: var(--page-max);\r\n");
      out.write("	margin: 0 auto;\r\n");
      out.write("	box-sizing: border-box;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("section {\r\n");
      out.write("	margin: 40px 0 28px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".sec-head {\r\n");
      out.write("	display: flex;\r\n");
      out.write("	align-items: baseline;\r\n");
      out.write("	justify-content: flex-start;\r\n");
      out.write("	margin-bottom: 14px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".sec-title {\r\n");
      out.write("	font-size: 22px;\r\n");
      out.write("	font-weight: 800;\r\n");
      out.write("	color: #eee;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* --------------------------\r\n");
      out.write("\r\n");
      out.write("   영화 카드 그리드\r\n");
      out.write("\r\n");
      out.write("--------------------------- */\r\n");
      out.write(".grid {\r\n");
      out.write("	display: grid;\r\n");
      out.write("	grid-template-columns: repeat(auto-fit, minmax(var(--card-min), 1fr));;\r\n");
      out.write("	gap: var(--grid-gap);\r\n");
      out.write("	justify-content: stretch;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* --------------------------\r\n");
      out.write("\r\n");
      out.write("   카드 스타일\r\n");
      out.write("\r\n");
      out.write("--------------------------- */\r\n");
      out.write(".card {\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	aspect-ratio: 2 / 3;   /* 높이 비율 고정 */\r\n");
      out.write("	height: auto;\r\n");
      out.write("	background: #151822;\r\n");
      out.write("	border-radius: 12px;\r\n");
      out.write("	overflow: hidden;\r\n");
      out.write("	position: relative;\r\n");
      out.write("	cursor: pointer;\r\n");
      out.write("	font-weight: 700;\r\n");
      out.write("	transition: 0.3s;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".poster {\r\n");
      out.write("	position: relative;\r\n");
      out.write("	aspect-ratio: 2/3;\r\n");
      out.write("	background: #0c0f15;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".poster img {\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	height: 100%;\r\n");
      out.write("	object-fit: cover;\r\n");
      out.write("	display: block;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 카드 후버 오버레이 */\r\n");
      out.write(".overlay {\r\n");
      out.write("	position: absolute;\r\n");
      out.write("	top: 0;\r\n");
      out.write("	left: 0;\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	height: 100%;\r\n");
      out.write("	background-color: rgba(128, 128, 128, 0.5);\r\n");
      out.write("	opacity: 0;\r\n");
      out.write("	transition: opacity 0.3s ease;\r\n");
      out.write("	z-index: 1;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".card:hover .overlay {\r\n");
      out.write("	opacity: 1;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 순위 뱃지 */\r\n");
      out.write(".rank-badge {\r\n");
      out.write("	position: absolute;\r\n");
      out.write("	left: 8px;\r\n");
      out.write("	top: 8px;\r\n");
      out.write("	background: gold;\r\n");
      out.write("	color: #111;\r\n");
      out.write("	border-radius: 8px;\r\n");
      out.write("	padding: 6px 10px;\r\n");
      out.write("	font-weight: 900;\r\n");
      out.write("	font-size: 14px;\r\n");
      out.write("	z-index: 3;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 좋아요 버튼 */\r\n");
      out.write(".like-btn {\r\n");
      out.write("	position: absolute;\r\n");
      out.write("	right: 8px;\r\n");
      out.write("	top: 8px;\r\n");
      out.write("	background: rgba(0, 0, 0, .45);\r\n");
      out.write("	width: 36px;\r\n");
      out.write("	height: 36px;\r\n");
      out.write("	border-radius: 10px;\r\n");
      out.write("	display: grid;\r\n");
      out.write("	place-items: center;\r\n");
      out.write("	cursor: pointer;\r\n");
      out.write("	color: #fff;\r\n");
      out.write("	z-index: 3;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 좋아요 숫자 */\r\n");
      out.write(".like-count{\r\n");
      out.write("	position: absolute;\r\n");
      out.write("	z-index: 3;\r\n");
      out.write("	right: 52px;\r\n");
      out.write("	top: 10px;\r\n");
      out.write("	height: 28px;\r\n");
      out.write("	padding: 0 10px;\r\n");
      out.write("	display: inline-flex;\r\n");
      out.write("	align-items: center;\r\n");
      out.write("	border-radius: 8px;\r\n");
      out.write("	background: rgba(0,0,0,.45);\r\n");
      out.write("	color: #fff;\r\n");
      out.write("	font-weight: 700;\r\n");
      out.write("	font-size: 13px;\r\n");
      out.write("	line-height: 28px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 카드 후버 버튼 */\r\n");
      out.write(".card-foot {\r\n");
      out.write("	position: absolute;\r\n");
      out.write("	top: 50%;\r\n");
      out.write("	left: 50%;\r\n");
      out.write("	transform: translate(-50%, -50%);\r\n");
      out.write("	z-index: 2;\r\n");
      out.write("	display: flex;\r\n");
      out.write("	flex-direction: column;\r\n");
      out.write("	gap: 8px;\r\n");
      out.write("	opacity: 0;\r\n");
      out.write("	transition: opacity 0.3s ease;\r\n");
      out.write("	z-index: 2;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".card:hover .card-foot {\r\n");
      out.write("	opacity: 1;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".btn.brand {      /* 카드 예매버튼 */ \r\n");
      out.write("	padding: 8px 14px;\r\n");
      out.write("	border-radius: 8px;\r\n");
      out.write("	background: #ff2f6e;\r\n");
      out.write("	color: #fff;\r\n");
      out.write("	text-decoration: none;\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	font-weight: 700;\r\n");
      out.write("	transition: opacity 0.3s ease;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".btn.detail { /* 카드 상세정보 버튼 */\r\n");
      out.write("	padding: 8px 14px;\r\n");
      out.write("	border-radius: 8px;\r\n");
      out.write("	background: #ff2f6e;\r\n");
      out.write("	color: #fff;\r\n");
      out.write("	text-decoration: none;\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	font-weight: 700;\r\n");
      out.write("	transition: opacity 0.3s ease;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 카드에 커서 올린 상태: 두 버튼은 기본 투명 아웃라인 */\r\n");
      out.write(".card:hover .card-foot .btn.brand,\r\n");
      out.write(".card:hover .card-foot .btn.detail {\r\n");
      out.write("	 background: transparent;\r\n");
      out.write("	 color: #ff2f6e;\r\n");
      out.write("	 border-color: #ff2f6e;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 버튼 자체에 커서 올리면: 그 버튼만 핑크로 강조 */\r\n");
      out.write(".card:hover .card-foot .btn.brand:hover,\r\n");
      out.write(".card:hover .card-foot .btn.detail:hover,\r\n");
      out.write(".card:hover .card-foot .btn.brand:focus-visible,\r\n");
      out.write(".card:hover .card-foot .btn.detail:focus-visible {\r\n");
      out.write("	background: #ff2f6e;\r\n");
      out.write("	color: #fff;\r\n");
      out.write("	border-color: #ff2f6e;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* --------------------------\r\n");
      out.write("\r\n");
      out.write("   카드 아래 영화 정보\r\n");
      out.write("\r\n");
      out.write("--------------------------- */\r\n");
      out.write(".movie-wrapper {\r\n");
      out.write("	display: flex;\r\n");
      out.write("	flex-direction: column;\r\n");
      out.write("	gap: 6px;\r\n");
      out.write("	width: 200px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".movie-info {\r\n");
      out.write("	display: flex;\r\n");
      out.write("	align-items: center;\r\n");
      out.write("	justify-content: space-between;\r\n");
      out.write("	gap: 8px;\r\n");
      out.write("	font-size: 14px;\r\n");
      out.write("	color: #eee;\r\n");
      out.write("	padding: 0 4px;\r\n");
      out.write("	box-sizing: border-box;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".movie-title {\r\n");
      out.write("	font-weight: 700;\r\n");
      out.write("	flex: 1;\r\n");
      out.write("	min-width: 0;\r\n");
      out.write("	white-space: nowrap;\r\n");
      out.write("	overflow: hidden;\r\n");
      out.write("	text-overflow: ellipsis;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".movie-time {\r\n");
      out.write("	font-weight: 500;\r\n");
      out.write("	flex: 0 0 auto;\r\n");
      out.write("	white-space: nowrap;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* --------------------------\r\n");
      out.write("\r\n");
      out.write("   캐러셀 스타일\r\n");
      out.write("\r\n");
      out.write("--------------------------- */\r\n");
      out.write(".carousel.slide {\r\n");
      out.write("  width: 100%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".carousel-item img {\r\n");
      out.write("	max-height: 400px;\r\n");
      out.write("	object-fit: cover;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* ===== 장르 칩 ===== */\r\n");
      out.write(".genre-filter {\r\n");
      out.write("  display: flex;\r\n");
      out.write("  gap: 10px;\r\n");
      out.write("  margin-top: 10px;\r\n");
      out.write("  overflow-x: auto;               /* 모바일 가로 스크롤 */\r\n");
      out.write("  padding-bottom: 2px;            /* 스크롤바와 살짝 띄움 */\r\n");
      out.write("  scrollbar-width: none;          /* 파폭 스크롤바 숨김 */\r\n");
      out.write("}\r\n");
      out.write(".genre-filter::-webkit-scrollbar { display: none; }  /* 크롬 스크롤바 숨김 */\r\n");
      out.write("\r\n");
      out.write(".genre-chip {\r\n");
      out.write("  display: inline-flex;\r\n");
      out.write("  align-items: center;\r\n");
      out.write("  height: 34px;\r\n");
      out.write("  padding: 0 14px;\r\n");
      out.write("  border: 1px solid #2a2a2a;\r\n");
      out.write("  border-radius: 999px;           /* 캡슐 */\r\n");
      out.write("  color: #eee;\r\n");
      out.write("  text-decoration: none;\r\n");
      out.write("  font-weight: 700;\r\n");
      out.write("  white-space: nowrap;\r\n");
      out.write("  transition: border-color .15s ease, background-color .15s ease, transform .1s ease;\r\n");
      out.write("}\r\n");
      out.write(".genre-chip:hover { border-color: #3a3a3a; background: #101010; transform: translateY(-1px); }\r\n");
      out.write(".genre-chip:focus-visible { outline: 2px solid #ff2f6e; outline-offset: 2px; }\r\n");
      out.write("\r\n");
      out.write("/* 활성 칩 */\r\n");
      out.write(".genre-chip.active {\r\n");
      out.write("  border-color: #ff2f6e;\r\n");
      out.write("  background: rgba(255,47,110, .08);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 섹션 제목과 같은 줄 배치 */\r\n");
      out.write(".sec-head { align-items: center; gap: 14px; flex-wrap: wrap; }\r\n");
      out.write(".sec-title { margin-right: 6px; }\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("	<!-- 공통 헤더 include -->\r\n");
      out.write("\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/header.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<main class=\"container\">\r\n");
      out.write("\r\n");
      out.write("		<!-- --------------------------\r\n");
      out.write("\r\n");
      out.write("     Bootstrap 캐러셀\r\n");
      out.write("\r\n");
      out.write("--------------------------- -->\r\n");
      out.write("\r\n");
      out.write("		<div id=\"movieCarousel\" class=\"carousel slide\" data-bs-ride=\"carousel\">\r\n");
      out.write("\r\n");
      out.write("			<div class=\"carousel-inner\">\r\n");
      out.write("\r\n");
      out.write("				<div class=\"carousel-item active\">\r\n");
      out.write("\r\n");
      out.write("					<img\r\n");
      out.write("						src=\"asset/images/love.png\"\r\n");
      out.write("						class=\"d-block w-100\" alt=\"슬라이드1\">\r\n");
      out.write("\r\n");
      out.write("					<div class=\"carousel-caption d-none d-md-block\"></div>\r\n");
      out.write("\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("				<div class=\"carousel-item\">\r\n");
      out.write("\r\n");
      out.write("					<img\r\n");
      out.write("						src=\"asset/images/lx.png\"\r\n");
      out.write("						class=\"d-block w-100\" alt=\"슬라이드2\">\r\n");
      out.write("\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("				<div class=\"carousel-item\">\r\n");
      out.write("\r\n");
      out.write("					<img src=\"asset/images/princess.png\" class=\"d-block w-100\" alt=\"슬라이드3\">\r\n");
      out.write("\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<button class=\"carousel-control-prev\" type=\"button\"\r\n");
      out.write("				data-bs-target=\"#movieCarousel\" data-bs-slide=\"prev\">\r\n");
      out.write("\r\n");
      out.write("				<span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n");
      out.write("\r\n");
      out.write("				<span class=\"visually-hidden\">Previous</span>\r\n");
      out.write("\r\n");
      out.write("			</button>\r\n");
      out.write("\r\n");
      out.write("			<button class=\"carousel-control-next\" type=\"button\"\r\n");
      out.write("				data-bs-target=\"#movieCarousel\" data-bs-slide=\"next\">\r\n");
      out.write("\r\n");
      out.write("				<span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n");
      out.write("\r\n");
      out.write("				<span class=\"visually-hidden\">Next</span>\r\n");
      out.write("\r\n");
      out.write("			</button>\r\n");
      out.write("\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("		<!-- --------------------------\r\n");
      out.write("\r\n");
      out.write("     인기 상영작 TOP\r\n");
      out.write("\r\n");
      out.write("--------------------------- -->\r\n");
      out.write("\r\n");
      out.write("		<section>\r\n");
      out.write("\r\n");
      out.write("			");
      out.write("\r\n");
      out.write("			");

			  String selected = request.getParameter("genre");  // null이면 전체(기본)
			
      out.write("\r\n");
      out.write("			\r\n");
      out.write("			<div class=\"sec-head\">\r\n");
      out.write("			  <div class=\"sec-title\">\r\n");
      out.write("			    인기 상영작 <span style=\"color:#ff2f6e\">TOP</span>\r\n");
      out.write("			  </div>\r\n");
      out.write("		\r\n");
      out.write("			  <nav class=\"genre-filter\" aria-label=\"장르 필터\">\r\n");
      out.write("			    ");
      out.write("\r\n");
      out.write("			    <a class=\"genre-chip ");
      out.print( (selected==null ? "active" : "") );
      out.write("\" href=\"MovieGalleryServlet\">전체</a>\r\n");
      out.write("			    <a class=\"genre-chip ");
      out.print( "로맨스".equals(selected) ? "active" : "" );
      out.write("\" href=\"MovieGenreServlet?genre=로맨스\">로맨스</a>\r\n");
      out.write("			    <a class=\"genre-chip ");
      out.print( "느와르".equals(selected) ? "active" : "" );
      out.write("\" href=\"MovieGenreServlet?genre=느와르\">느와르</a>\r\n");
      out.write("			    <a class=\"genre-chip ");
      out.print( "뮤지컬".equals(selected) ? "active" : "" );
      out.write("\" href=\"MovieGenreServlet?genre=뮤지컬\">뮤지컬</a>\r\n");
      out.write("			    <a class=\"genre-chip ");
      out.print( "좀비".equals(selected) ? "active" : "" );
      out.write("\" href=\"MovieGenreServlet?genre=좀비\">좀비</a>\r\n");
      out.write("			    <a class=\"genre-chip ");
      out.print( "가족".equals(selected) ? "active" : "" );
      out.write("\" href=\"MovieGenreServlet?genre=가족\">가족</a>\r\n");
      out.write("			    <a class=\"genre-chip ");
      out.print( "액션".equals(selected) ? "active" : "" );
      out.write("\" href=\"MovieGenreServlet?genre=액션\">액션</a>\r\n");
      out.write("			    <a class=\"genre-chip ");
      out.print( "애니메이션".equals(selected) ? "active" : "" );
      out.write("\" href=\"MovieGenreServlet?genre=애니메이션\">애니메이션</a>\r\n");
      out.write("			  </nav>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<!-- 영화 카드 그리드 -->\r\n");
      out.write("\r\n");
      out.write("			<div class=\"grid\" id=\"movieGrid\">\r\n");
      out.write("				\r\n");
      out.write("				<!-- JSTL forEach를 사용하여 영화 목록을 반복 출력 -->\r\n");
      out.write("				");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\r\n");
      out.write("			</div>\r\n");
      out.write("			<!-- /grid -->\r\n");
      out.write("\r\n");
      out.write("		</section>\r\n");
      out.write("\r\n");
      out.write("	</main>\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("document.querySelectorAll('.like-btn').forEach(btn => {\r\n");
      out.write("	  btn.addEventListener('click', async () => {\r\n");
      out.write("	    const movieId = btn.dataset.movieId;\r\n");
      out.write("	    if (!movieId) { console.warn('movieId 없음'); return; }\r\n");
      out.write("\r\n");
      out.write("	    const res = await fetch('MovieLike?movieId=' + encodeURIComponent(movieId), { method:'POST' });\r\n");
      out.write("	    if (res.status === 401) { alert('로그인 후 이용해주세요.'); return; }\r\n");
      out.write("\r\n");
      out.write("	    const data = await res.json();\r\n");
      out.write("	    btn.textContent = data.liked ? '♥' : '♡';\r\n");
      out.write("	    btn.setAttribute('aria-pressed', data.liked ? 'true' : 'false');\r\n");
      out.write("\r\n");
      out.write("	    const c = document.getElementById('like-count-' + movieId);\r\n");
      out.write("	    if (c) c.textContent = data.likeCount;\r\n");
      out.write("	  });\r\n");
      out.write("	});\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/bottom.jsp", out, false);
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fforEach_005f0.setParent(null);
    // /movie.jsp(431,4) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f0.setVar("movie");
    // /movie.jsp(431,4) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/movie.jsp(431,4) '${movieList}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${movieList}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
    // /movie.jsp(431,4) name = varStatus type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f0.setVarStatus("status");
    int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
    try {
      int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
      if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("					<div class=\"movie-wrapper\">\r\n");
          out.write("\r\n");
          out.write("						<article class=\"card\">\r\n");
          out.write("\r\n");
          out.write("							<div class=\"poster\">\r\n");
          out.write("\r\n");
          out.write("								<img src=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${movie.poster}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\" alt=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${movie.movieTitle}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\">\r\n");
          out.write("\r\n");
          out.write("								<div class=\"rank-badge\">");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${status.count}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</div>\r\n");
          out.write("\r\n");
          out.write("								");
          if (_jspx_meth_c_005fset_005f0(_jspx_th_c_005fforEach_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
            return true;
          out.write("\r\n");
          out.write("								\r\n");
          out.write("								<div class=\"like-btn\"\r\n");
          out.write("								     data-movie-id=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${movie.movieId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\"\r\n");
          out.write("								     aria-pressed=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${isLiked ? 'true' : 'false'}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\"\r\n");
          out.write("								     title=\"좋아요\">\r\n");
          out.write("								  ");
          if (_jspx_meth_c_005fchoose_005f0(_jspx_th_c_005fforEach_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
            return true;
          out.write("\r\n");
          out.write("								</div>\r\n");
          out.write("								\r\n");
          out.write("								<span class=\"like-count\" id=\"like-count-");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${movie.movieId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\">\r\n");
          out.write("								  ");
          if (_jspx_meth_c_005fout_005f0(_jspx_th_c_005fforEach_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
            return true;
          out.write("\r\n");
          out.write("								</span>\r\n");
          out.write("\r\n");
          out.write("								<div class=\"overlay\"></div>\r\n");
          out.write("\r\n");
          out.write("							</div>\r\n");
          out.write("\r\n");
          out.write("							<div class=\"card-foot\">\r\n");
          out.write("								\r\n");
          out.write("								<a class=\"btn brand\" href=\"MovieListServlet\">예매하기</a> \r\n");
          out.write("								<a class=\"btn detail\" href=\"OneMovieServlet?movieId=");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${movie.movieId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\">상세정보</a>\r\n");
          out.write("\r\n");
          out.write("							</div>\r\n");
          out.write("\r\n");
          out.write("						</article>\r\n");
          out.write("\r\n");
          out.write("						<div class=\"movie-info\">\r\n");
          out.write("\r\n");
          out.write("							<span class=\"movie-title\">");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${movie.movieTitle}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</span> \r\n");
          out.write("							<span class=\"movie-time\">⏱ ");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${movie.movieTime}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("분</span>\r\n");
          out.write("\r\n");
          out.write("						</div>\r\n");
          out.write("\r\n");
          out.write("					</div>\r\n");
          out.write("				");
          int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } catch (java.lang.Throwable _jspx_exception) {
      while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
        out = _jspx_page_context.popBody();
      _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
    } finally {
      _jspx_th_c_005fforEach_005f0.doFinally();
    }
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fset_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f0);
    // /movie.jsp(442,8) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fset_005f0.setVar("isLiked");
    // /movie.jsp(442,8) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
    _jspx_th_c_005fset_005f0.setValue(new org.apache.jasper.el.JspValueExpression("/movie.jsp(442,8) '${likedMap != null && likedMap[movie.movieId] == true}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${likedMap != null && likedMap[movie.movieId] == true}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
    int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
    if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005fchoose_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f0 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    _jspx_th_c_005fchoose_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fchoose_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f0);
    int _jspx_eval_c_005fchoose_005f0 = _jspx_th_c_005fchoose_005f0.doStartTag();
    if (_jspx_eval_c_005fchoose_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("								    ");
        if (_jspx_meth_c_005fwhen_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
          return true;
        out.write("\r\n");
        out.write("								    ");
        if (_jspx_meth_c_005fotherwise_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
          return true;
        out.write("\r\n");
        out.write("								  ");
        int evalDoAfterBody = _jspx_th_c_005fchoose_005f0.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fchoose_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f0 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    _jspx_th_c_005fwhen_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fwhen_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
    // /movie.jsp(449,12) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fwhen_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${isLiked}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
    int _jspx_eval_c_005fwhen_005f0 = _jspx_th_c_005fwhen_005f0.doStartTag();
    if (_jspx_eval_c_005fwhen_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write('♥');
        int evalDoAfterBody = _jspx_th_c_005fwhen_005f0.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fwhen_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005fotherwise_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:otherwise
    org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f0 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
    _jspx_th_c_005fotherwise_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fotherwise_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
    int _jspx_eval_c_005fotherwise_005f0 = _jspx_th_c_005fotherwise_005f0.doStartTag();
    if (_jspx_eval_c_005fotherwise_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write('♡');
        int evalDoAfterBody = _jspx_th_c_005fotherwise_005f0.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fotherwise_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005fout_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f0 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fdefault_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    _jspx_th_c_005fout_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fout_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f0);
    // /movie.jsp(455,10) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fout_005f0.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${movie.likeCount}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
    // /movie.jsp(455,10) name = default type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fout_005f0.setDefault("0");
    int _jspx_eval_c_005fout_005f0 = _jspx_th_c_005fout_005f0.doStartTag();
    if (_jspx_th_c_005fout_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fdefault_005fnobody.reuse(_jspx_th_c_005fout_005f0);
    return false;
  }
}
